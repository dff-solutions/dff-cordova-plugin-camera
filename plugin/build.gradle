plugins {
    id "com.android.library"
    id "de.mannodermaus.android-junit5"
    id "com.adarshr.test-logger"
    id "idea"
}

def junit_jupiter_version = "5.4.2"
def powermock_version = "2.0.0"
def mockito_version = "2.25.1"

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 27
        versionCode 302
        versionName "3.0.2"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        junitPlatform {
            // Configure JUnit 5 tests here
        }
        unitTests.all {
            testLogging {
                events "skipped", "passed", "failed"
            }
        }
        unitTests.returnDefaultValues = true
    }

}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../docs/javadoc/")
    options.noTimestamp true
    options.locale "en"
    failOnError false
}
build.finalizedBy(javadoc)

testlogger {
    theme 'mocha'
}

apply from: "quality.gradle"

apply from: "build-camera-plugin.gradle"

dependencies {
    implementation (
        'org.apache.cordova:framework:7.1.2',
        'com.android.support:multidex:1.0.3'
    )

    testAnnotationProcessor (
        "com.google.dagger:dagger-compiler:$dagger_version",
        "com.google.dagger:dagger-android-processor:$dagger_version"
    )

    testCompileOnly(
        'junit:junit:4.12'
    )

    testImplementation(
        'org.apache.cordova:framework:7.1.2',
        'junit:junit:4.12',
        "org.junit.jupiter:junit-jupiter:$junit_jupiter_version",
        "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version",
        "org.mockito:mockito-core:$mockito_version",
        "org.mockito:mockito-junit-jupiter:$mockito_version",
        'org.robolectric:robolectric:4.2',

        "org.powermock:powermock-module-junit4:$powermock_version",
        "org.powermock:powermock-module-junit4-rule:$powermock_version",
        "org.powermock:powermock-api-mockito2:$powermock_version",
        "org.powermock:powermock-classloading-xstream:$powermock_version",

        "com.google.dagger:dagger:$dagger_version",
        "com.google.dagger:dagger-android:$dagger_version",
        "com.google.dagger:dagger-android-support:$dagger_version",
    )
    testRuntimeOnly(
        "org.junit.platform:junit-platform-launcher:1.4.0",
        "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version",
        "org.junit.vintage:junit-vintage-engine:$junit_jupiter_version"
    )

    androidTestAnnotationProcessor (
        "com.google.dagger:dagger-compiler:$dagger_version",
        "com.google.dagger:dagger-android-processor:$dagger_version"
    )

    androidTestImplementation (
        // Core library
        'androidx.test:core:1.1.0',

        // AndroidJUnitRunner and JUnit Rules
        'androidx.test:runner:1.1.1',
        'androidx.test:rules:1.1.1',

        // Assertions
        'androidx.test.ext:junit:1.1.0',

        'org.apache.cordova:framework:7.1.2',
        "org.mockito:mockito-android:$mockito_version",

        "com.google.dagger:dagger:$dagger_version",
        "com.google.dagger:dagger-android:$dagger_version",
        "com.google.dagger:dagger-android-support:$dagger_version",
    )
}

idea {
    module {
        sourceDirs += file('src/main/java')
        testSourceDirs += file('src/test/java')
    }
}
